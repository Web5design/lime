// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.DBPediaInfoPlugin = (function(_super) {

    __extends(DBPediaInfoPlugin, _super);

    function DBPediaInfoPlugin() {
      return DBPediaInfoPlugin.__super__.constructor.apply(this, arguments);
    }

    DBPediaInfoPlugin.prototype.init = function() {
      var annotation, _i, _len, _ref, _results;
      this.name = 'DBPediaInfoPlugin';
      console.info("Initialize " + this.name);
      _ref = this.lime.annotations;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        annotation = _ref[_i];
        if (annotation.resource.value.indexOf("dbpedia") > 0) {
          _results.push(this.handleAnnotation(annotation));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    DBPediaInfoPlugin.prototype.handleAnnotation = function(annotation) {
      var _this = this;
      return annotation.entityPromise.done(function(entities) {
        var nonConcept, widget;
        nonConcept = annotation.getDescription();
        nonConcept = nonConcept.replace("No description found.", "");
        if (nonConcept.length >= 3) {
          widget = _this.lime.allocateWidgetSpace(_this, {
            thumbnail: "img/info.png",
            title: "" + (annotation.getLabel()) + " Info",
            type: "DbpediaInfoWidget",
            sortBy: function() {
              return 10000 * annotation.start + annotation.end;
            }
          });
          widget.annotation = annotation;
          jQuery(widget).bind('activate', function(e) {
            return _this.getModalContainer().html(_this.showAbstractInModalWindow(annotation));
          });
          annotation.widgets[_this.name] = widget;
          jQuery(annotation).bind("becomeActive", function(e) {
            return annotation.widgets[_this.name].setActive();
          });
          return jQuery(annotation).bind("becomeInactive", function(e) {
            return annotation.widgets[_this.name].setInactive();
          });
        }
      });
    };

    DBPediaInfoPlugin.prototype.showAbstractInModalWindow = function(annotation, modalContainer) {
      var comment, depiction, label, lime, page, result;
      label = annotation.getLabel();
      page = annotation.getPage();
      lime = this.lime;
      comment = annotation.getDescription();
      depiction = annotation.getDepiction({
        without: 'thumb'
      });
      if (depiction === null) {
        depiction = "img/noimage.png";
      }
      result = "<div id=\"listContainer\" style=\"position:relative; float: left; z-index: 10; width:35%; height: 95%; background: white; box-shadow: rgba(85,85,85,0.5) 0px 0px 24px;\" >\n  <img src=\"" + depiction + "\" style=\"display: block; width: auto; max-height: 300px; max-width:90%; margin-top: 30px; margin-left: auto;  margin-right: auto; border: 5px solid black;\"/>\n</div>\n<div id=\"displayArea\" style=\"position:relative; float: left; z-index: 10; width: 65%; height:95%; background: #DBDBDB; overflow: auto;\">\n  <p style=\"margin-left: 10px; font-size: 22px; text-align: left; color:black; font-family: 'Share Tech', sans-serif; font-weight: 400;\">" + comment + "</p>\n</div>";
      return result;
    };

    return DBPediaInfoPlugin;

  })(window.LimePlugin);

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.GeoNamesMapPlugin = (function(_super) {

    __extends(GeoNamesMapPlugin, _super);

    function GeoNamesMapPlugin() {
      return GeoNamesMapPlugin.__super__.constructor.apply(this, arguments);
    }

    GeoNamesMapPlugin.prototype.init = function() {
      var annotation, _i, _len, _ref, _ref1, _results;
      this.name = 'GeoNamesMapPlugin';
      annotation = void 0;
      console.info("Initialize GeoNamesMapPlugin");
      _ref = this.lime.annotations;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        annotation = _ref[_i];
        if (annotation.resource.value.indexOf("sws.geonames.org") > 0 && ((_ref1 = annotation.relation.value) === 'http://connectme.at/ontology#explicitlyShows' || _ref1 === 'http://connectme.at/ontology#explicitlyMentions' || _ref1 === 'http://connectme.at/ontology#implicitlyShows' || _ref1 === 'http://connectme.at/ontology#implicitlyMentions')) {
          _results.push(this.handleAnnotation(annotation));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    GeoNamesMapPlugin.prototype.handleAnnotation = function(annotation) {
      var _this = this;
      return annotation.entityPromise.done(function() {
        var nonConcept, widget;
        nonConcept = annotation.getDescription();
        nonConcept = nonConcept.replace("No description found.", "");
        if (nonConcept.length >= 3) {
          widget = _this.lime.allocateWidgetSpace(_this, {
            thumbnail: "img/mapIcon.png",
            title: "" + (annotation.getLabel()) + " Map",
            type: "GeoNamesMapWidget",
            sortBy: function() {
              return 10000 * annotation.start + annotation.end;
            }
          });
          widget.annotation = annotation;
          jQuery(widget).bind('activate', function(e) {
            return _this.showInModalWindow(annotation, _this.getModalContainer());
          });
          annotation.widgets[_this.name] = widget;
          jQuery(annotation).bind("becomeActive", function(e) {
            return annotation.widgets[_this.name].setActive();
          });
          jQuery(annotation).bind("becomeInactive", function(e) {
            return annotation.widgets[_this.name].setInactive();
          });
          jQuery(widget).bind("leftarrow", function(e) {
            _this.geotabsiterator = _this.geotabs.length === _this.geotabsiterator + 1 ? 0 : _this.geotabsiterator + 1;
            if (_this.geotabsiterator === 0) {
              $("#geoMap").trigger('click');
            }
            if (_this.geotabsiterator === 1) {
              $("#geoWeather").trigger('click');
            }
            if (_this.geotabsiterator === 2) {
              $("#geoRout").trigger('click');
            }
            if (_this.geotabsiterator === 3) {
              return $("#geoPanoramio").trigger('click');
            }
          });
          jQuery(widget).bind("rightarrow", function(e) {
            _this.geotabsiterator = _this.geotabsiterator === 0 ? _this.geotabs.length - 1 : _this.geotabsiterator - 1;
            if (_this.geotabsiterator === 0) {
              $("#geoMap").trigger('click');
            }
            if (_this.geotabsiterator === 1) {
              $("#geoWeather").trigger('click');
            }
            if (_this.geotabsiterator === 2) {
              $("#geoRout").trigger('click');
            }
            if (_this.geotabsiterator === 3) {
              return $("#geoPanoramio").trigger('click');
            }
          });
          jQuery(widget).bind("uparrow", function(e) {
            var customEvent;
            console.info('uparrow pressed');
            customEvent = jQuery.Event("keydown");
            customEvent.which = 107;
            return $("#geoMap").trigger(customEvent);
          });
          return jQuery(widget).bind("downarrow", function(e) {
            var customEvent;
            console.info('downarrow pressed');
            customEvent = jQuery.Event("keydown");
            return customEvent.which = 109;
          });
        }
      });
    };

    GeoNamesMapPlugin.prototype.showInModalWindow = function(annotation, outputElement) {
      var language, modalContent, result;
      modalContent = void 0;
      result = void 0;
      language = UTILS.getParameterByName("lang");
      modalContent = $(outputElement);
      modalContent.css("width", "600px");
      modalContent.css("height", "600px");
      if (language.indexOf("en") >= 0) {
        result = " <div id=\"ifoWidgetExpanded\" style=\"border: 1px dotted lightgray; position: absolute; top: 0; z-index: 100; width: 600px; right: 0; height: 600px;\">\n <div id=\"map_area\" style=\"left: 0px; top: 0px; width: 600px; height: 600px; position: relative;\"></div>\n <div id=\"mapMenu\" style=\"position: absolute; z-index: 900; width: auto; right: 1px; bottom: 0px; height: 41px;\">\n <div id=\"geoMap\" class=\"geotab\" style=\"position: relative; background-position: center center; background-image: url('img/mapIcon.png'); background-size: contain; float: right; height: 40px; width: 86px;\"></div>\n <div id=\"geoWeather\" class=\"geotab\" style=\"position: relative; background-position: center center; background-image: url('img/weather.png'); background-size: contain; float: right; width: 86px; height: 40px;\"></div>\n <div id=\"geoRout\" class=\"geotab\" style=\"background-position: center center; background-size: contain; background-image: url('img/directionIcon.png'); float: right; width: 86px; height: 40px;\"></div>\n <div id=\"geoPanoramio\" class=\"geotab disabled\" style=\"display: none; background-position: center center; background-size: contain; background-image: url('img/directionIcon.png'); float: right; width: 86px; height: 40px;\"></div>\n </div>\n<!-- <div id=\"closingButton\" style=\"position: absolute; z-index: 900; width: 87px; height: 38px; background-color: #414040; left: 513px; top: 408px;\"><span data-dojo-type=\"shapes.Text\" style=\"font-size: 14px; position: absolute; z-index: 900; color: #ffffff; left: 41px; top: 8.5px;\">X</span></div> -->\n </div>";
      } else {
        if (language.indexOf("de") >= 0) {
          result = "<div id=\"map_area\" class=\"mainWidgetContainer\" style=\"position: absolute; z-index: 900; background-image: url('img/map.png'); background-repeat: no-repeat; background-position: left top; background-size: cover; box-shadow: inset 0 0 5px #888; height: " + (widgetHeight - 116) + "px; width: 740px; left: 0px; top: 116px;\"></div>\n <div id=\"geowidgetheader\" style=\"position: absolute; z-index: 900; background-color: #9c9c9b; background-repeat: no-repeat; background-position: 0px 0px; background-size: cover; background-image: url('img/mapBckg.png'); width: 660px; height: 116px; left: 80px; top: 0;\">\n   <div id=\"location_bar\" style=\"background-color: #45c048; width: 617px; position: relative; left: 0px; top: 0px; height: 38px;\">\n  </div>\n   <div id=\"weather_bar\" style=\"height: 38px; width: 617px; background-color: #f8cb86;\"></div>\n   <div id=\"close\" style=\"position: absolute; background-color: #070606; width: 48px; height: 100%; left: 616px; top: 0px;\">\n</div>\n   <p id=\"elevation\" style=\"bottom: 1px; float: none; display: inline; position: absolute; z-index: 900; font-family: Arial,Helvetica,sans-serif; font-size: 22px; text-align: right; line-height: normal; font-weight: bold; color: #ffffff; vertical-align: baseline; text-decoration: none; font-style: normal; text-indent: 0; margin-top: 0px; margin-bottom: 0px; margin-right: 1em; right: 48px;\"> &nbsp; </p>\n   <div id=\"rout_bar\" style=\"width: 617px; height: 40px; background-color: #fc8466;\"></div>\n </div>\n <div id=\"menu_bar\" style=\"border: none; border-radius: 6px; -moz-border-radius: 6px; border-top-left-radius: 6px; border-top-right-radius: 6px; border-bottom-right-radius: 6px; border-bottom-left-radius: 6px; position: absolute; z-index: 900; background-color: transparent; width: 77px; height: 113px; left: 0px; top: 0;\">\n <div id=\"menu_button_container\" style=\"position: relative; top: 0px; display: block; right: 0px; z-index: 900; float: right; width: 80px; height: 117px; left: 0px;\">\n<div id=\"geoMap\" style=\"position: relative; background-position: center center; background-image: url('img/mapIcon.png'); background-size: contain; float: none; height: 38px; width: 86px;\"></div>\n<div id=\"geoWeather\" style=\"position: relative; background-position: center center; background-image: url('img/weather.png'); background-size: contain; float: none; width: 86px; height: 38px;\"></div>\n<div id=\"geoRout\" style=\"background-position: center center; background-size: contain; background-image: url('img/directionIcon.png'); float: none; width: 86px; height: 40px;\"></div>\n</div>\n </div>\n </body>";
        }
      }
      modalContent.append(result);
      this.geotabs = $('.geotab:not(.disabled)');
      this.geotabsiterator = 0;
      $("#geoMap").click(function() {
        var i, latitude, latlng, locationName, longitude, map, myOptions, output, x, xmlDoc, xmlhttp;
        $('.geotab.selected').removeClass('selected');
        $("#location_bar").css("visibility", "visible");
        $("#weather_bar").css("visibility", "hidden");
        $("#rout_bar").css("visibility", "hidden");
        $("#map_area").empty();
        i = void 0;
        latitude = void 0;
        latlng = void 0;
        locationName = void 0;
        longitude = void 0;
        map = void 0;
        myOptions = void 0;
        output = void 0;
        x = void 0;
        xmlDoc = void 0;
        xmlhttp = void 0;
        try {
          if (window.XMLHttpRequest) {
            xmlhttp = new XMLHttpRequest();
          } else {
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
          }
          xmlhttp.open("POST", annotation.resource.value + "/about.rdf", false);
          xmlhttp.send();
          xmlDoc = xmlhttp.responseXML;
          x = xmlDoc.getElementsByTagName("Feature");
          i = 0;
          while (i < x.length) {
            locationName = x[i].getElementsByTagName("name")[0].childNodes[0].nodeValue;
            latitude = x[i].getElementsByTagName("lat")[0].childNodes[0].nodeValue;
            longitude = x[i].getElementsByTagName("long")[0].childNodes[0].nodeValue;
            i++;
          }
          output = document.getElementById("map_area");
          latlng = new google.maps.LatLng(latitude, longitude);
          myOptions = {
            zoom: 13,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          map = new google.maps.Map(output, myOptions);
          google.maps.event.addListener(output, 'keydown', console.info('map catched the keydown event'));
        } catch (_error) {}
        return $("#geoMap").addClass('selected');
      });
      $("#geoWeather").click(function() {
        var i, latitude, latlng, locationName, longitude, map, myOptions, output, weatherLayer, x, xmlDoc, xmlhttp;
        $('.geotab.selected').removeClass('selected');
        $("#location_bar").css("visibility", "hidden");
        $("#weather_bar").css("visibility", "visible");
        $("#rout_bar").css("visibility", "hidden");
        $("#map_area").empty();
        i = void 0;
        latitude = void 0;
        latlng = void 0;
        locationName = void 0;
        longitude = void 0;
        map = void 0;
        myOptions = void 0;
        output = void 0;
        weatherLayer = void 0;
        x = void 0;
        xmlDoc = void 0;
        xmlhttp = void 0;
        try {
          if (window.XMLHttpRequest) {
            xmlhttp = new XMLHttpRequest();
          } else {
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
          }
          xmlhttp.open("POST", annotation.resource.value + "/about.rdf", false);
          xmlhttp.send();
          xmlDoc = xmlhttp.responseXML;
          x = xmlDoc.getElementsByTagName("Feature");
          i = 0;
          while (i < x.length) {
            locationName = x[i].getElementsByTagName("name")[0].childNodes[0].nodeValue;
            latitude = x[i].getElementsByTagName("lat")[0].childNodes[0].nodeValue;
            longitude = x[i].getElementsByTagName("long")[0].childNodes[0].nodeValue;
            i++;
          }
        } catch (_error) {}
        output = document.getElementById("map_area");
        latlng = new google.maps.LatLng(latitude, longitude);
        myOptions = {
          zoom: 11,
          center: latlng,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(output, myOptions);
        weatherLayer = new google.maps.weather.WeatherLayer({
          temperatureUnits: google.maps.weather.TemperatureUnit.CELSIUS
        });
        weatherLayer.setMap(map);
        return $("#geoWeather").addClass('selected');
      });
      $("#geoRout").click(function() {
        $('.geotab.selected').removeClass('selected');
        $("#location_bar").css("visibility", "hidden");
        $("#weather_bar").css("visibility", "hidden");
        $("#rout_bar").css("visibility", "visible");
        $("#map_area").empty();
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition((function(position) {
            var destination, directionDisplay, directionsDisplay, directionsService, i, latitude, locationName, longitude, map, mapOptions, myOptions, output, request, start, x, xmlDoc, xmlhttp;
            i = void 0;
            latitude = void 0;
            locationName = void 0;
            longitude = void 0;
            map = void 0;
            myOptions = void 0;
            output = void 0;
            x = void 0;
            xmlDoc = void 0;
            xmlhttp = void 0;
            start = void 0;
            destination = void 0;
            directionDisplay = void 0;
            directionsService = new google.maps.DirectionsService();
            try {
              if (window.XMLHttpRequest) {
                xmlhttp = new XMLHttpRequest();
              } else {
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
              }
              xmlhttp.open("POST", annotation.resource.value + "/about.rdf", false);
              xmlhttp.send();
              xmlDoc = xmlhttp.responseXML;
              x = xmlDoc.getElementsByTagName("Feature");
              i = 0;
              while (i < x.length) {
                locationName = x[i].getElementsByTagName("name")[0].childNodes[0].nodeValue;
                latitude = x[i].getElementsByTagName("lat")[0].childNodes[0].nodeValue;
                longitude = x[i].getElementsByTagName("long")[0].childNodes[0].nodeValue;
                i++;
              }
            } catch (_error) {}
            output = document.getElementById("map_area");
            directionsDisplay = new google.maps.DirectionsRenderer();
            destination = new google.maps.LatLng(latitude, longitude);
            mapOptions = {
              zoom: 7,
              mapTypeId: google.maps.MapTypeId.ROADMAP,
              center: destination
            };
            map = new google.maps.Map(output, mapOptions);
            start = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            directionsDisplay.setMap(map);
            request = {
              origin: start,
              destination: destination,
              travelMode: google.maps.TravelMode.DRIVING
            };
            return directionsService.route(request, function(result, status) {
              if (status === google.maps.DirectionsStatus.OK) {
                return directionsDisplay.setDirections(result);
              }
            });
          }), function(error) {
            switch (error.code) {
              case error.TIMEOUT:
                return alert("Timeout");
              case error.POSITION_UNAVAILABLE:
                return alert("Position unavailable");
              case error.PERMISSION_DENIED:
                return alert("Permission denied");
              case error.UNKNOWN_ERROR:
                return alert("Unknown error");
            }
          });
        }
        return $("#geoRout").addClass('selected');
      });
      $("#geoPanoramio").click(function() {
        $('.geotab.selected').removeClass('selected');
        return $("#geoPanoramio").addClass('selected');
      });
      $("#geoMap").trigger("click");
      $("#geoMap").addClass('selected');
    };

    return GeoNamesMapPlugin;

  })(window.LimePlugin);

}).call(this);

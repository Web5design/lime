// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TVPlugin = (function(_super) {

    __extends(TVPlugin, _super);

    function TVPlugin() {
      this._loadFullDbpediaEntity = __bind(this._loadFullDbpediaEntity, this);
      return TVPlugin.__super__.constructor.apply(this, arguments);
    }

    TVPlugin.prototype.init = function() {
      var annotation, _i, _len, _ref, _results;
      this.name = 'TVPlugin';
      console.info("Initialize " + this.name);
      _ref = this.lime.annotations;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        annotation = _ref[_i];
        if (annotation.resource.value.indexOf("dbpedia") > 0) {
          _results.push(this.handleAnnotation(annotation));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    TVPlugin.prototype.defaults = {
      actorTypes: ['<http://dbpedia.org/class/yago/Actor109765278>', '<http://dbpedia.org/class/yago/AustrianFilmActors>', '<http://dbpedia.org/class/yago/FilmActors>', '<http://dbpedia.org/class/yago/AmericanTelevisionActors>', '<http://dbpedia.org/class/yago/AmericanVoiceActors>', '<http://dbpedia.org/class/yago/AmericanActorsOfEnglishDescent>', '<http://dbpedia.org/class/yago/AmericanSoapOperaActors>', '<http://dbpedia.org/class/yago/AmericanFilmActors>', '<http://dbpedia.org/class/yago/Actress109767700>', '<http://dbpedia.org/class/yago/AmericanChildActors>', '<http://dbpedia.org/class/yago/ActorsFromCalifornia>'],
      characterTypes: ["<http://dbpedia.org/ontology/FictionalCharacter>", "<http://dbpedia.org/class/yago/FictionalCharactersFromCalifornia>", "<http://dbpedia.org/class/yago/FictionalCharacter109587565>"],
      directorTypes: ["<http://dbpedia.org/class/yago/Director110014939>", "<http://dbpedia.org/class/yago/EnglishFilmDirectors>", "<http://dbpedia.org/class/yago/DanishFilmDirectors>", "<http://dbpedia.org/class/yago/SilentFilmDirectors>", "<http://dbpedia.org/class/yago/ItalianFilmDirectors>", "<http://dbpedia.org/class/yago/ScottishFilmDirectors>", "<http://dbpedia.org/class/yago/EnglishTheatreDirectors>", "<http://dbpedia.org/class/yago/DutchFilmDirectors>", "<http://dbpedia.org/class/yago/ArtisticDirectors>", "<http://dbpedia.org/class/yago/IndianFilmDirectors>", "<http://dbpedia.org/class/yago/TurkishFilmDirectors>", "<http://dbpedia.org/class/yago/HindiFilmDirectors>", "<http://dbpedia.org/class/yago/PolishFilmDirectors>", "<http://dbpedia.org/class/yago/RomanianFilmDirectors>", "<http://dbpedia.org/class/yago/MuslimAmericanFilmDirectors>", "<http://dbpedia.org/class/yago/SpanishFilmDirectors>", "<http://dbpedia.org/class/yago/BelgianFilmDirectors>", "<http://dbpedia.org/class/yago/EgyptianFilmDirectors>", "<http://dbpedia.org/class/yago/PakistaniFilmDirectors>", "<http://dbpedia.org/class/yago/IranianFilmDirectors>", "<http://dbpedia.org/class/yago/ItalianBritishFilmDirectors>", "<http://dbpedia.org/class/yago/BrazilianFilmDirectors>", "<http://dbpedia.org/class/yago/IcelandicFilmDirectors>", "<http://dbpedia.org/class/yago/AustralianTelevisionDirectors>", "<http://dbpedia.org/class/yago/M%C3%A9tisFilmDirectors>", "<http://dbpedia.org/class/yago/BengaliFilmDirectors>", "<http://dbpedia.org/class/yago/ColombianFilmDirectors>", "<http://dbpedia.org/class/yago/KannadaFilmDirectors>", "<http://dbpedia.org/class/yago/AmericanFilmDirectorsOfArmenianDescent>", "<http://dbpedia.org/class/yago/BangladeshiFilmDirectors>", "<http://dbpedia.org/class/yago/KurdishFilmDirectors>", "<http://dbpedia.org/class/yago/NativeAmericanFilmDirectors>", "<http://dbpedia.org/class/yago/PortuguEseFilmDirectors>", "<http://dbpedia.org/class/yago/AmericanFilmDirectors>", "<http://dbpedia.org/class/yago/English-languAgeFilmDirectors>"]
    };

    TVPlugin.prototype.handleAnnotation = function(annotation) {
      var _this = this;
      return annotation.entityPromise.done(function() {
        var entity;
        if (!_this.vie) {
          _this.vie = annotation.vie;
          _this.vie.namespaces.add({
            umbel: 'http://umbel.org/umbel/rc/'
          });
          _this.vie.use(new _this.vie.DBPediaService);
        }
        if (annotation.resource.value.indexOf('dbpedia') !== -1) {
          entity = _this.vie.entities.get(annotation.resource.value);
          if (entity && entity.isof('dbpedia:Person')) {
            return _this._loadFullDbpediaEntity(entity, function(fullEntity) {
              return _this.processAnnotation(annotation, fullEntity.attributes['@type']);
            });
          }
        }
      });
    };

    TVPlugin.prototype.processAnnotation = function(annotation, typeArray) {
      var widget, widgetType;
      if (_.intersection(typeArray, this.options.actorTypes).length) {
        console.info('Render Actor widget');
        widgetType = 'ActorWidget';
        widget = this._initWidget(annotation, widgetType, this.renderActor, {
          thumbnail: "img/info.png",
          title: "" + (annotation.getLabel()) + " (Actor)",
          type: widgetType,
          sortBy: function() {
            return 10000 * annotation.start + annotation.end;
          }
        });
      }
      if (_.intersection(typeArray, this.options.characterTypes).length) {
        console.info('Render Character widget');
        widgetType = 'CharacterWidget';
        widget = this._initWidget(annotation, widgetType, this.renderCharacter, {
          thumbnail: "img/info.png",
          title: "" + (annotation.getLabel()) + " (Character)",
          type: widgetType,
          sortBy: function() {
            return 10000 * annotation.start + annotation.end;
          }
        });
      }
      if (_.intersection(typeArray, this.options.directorTypes).length) {
        console.info('Render Director widget');
        widgetType = 'DirectorWidget';
        return widget = this._initWidget(annotation, widgetType, this.renderDirector, {
          thumbnail: "img/info.png",
          title: "" + (annotation.getLabel()) + " (Director)",
          type: widgetType,
          sortBy: function() {
            return 10000 * annotation.start + annotation.end;
          }
        });
      }
    };

    TVPlugin.prototype.renderActor = function(annotation, container) {
      return container.append("<div>Hello Actor " + (annotation.getLabel()) + "!</div>");
    };

    TVPlugin.prototype.renderCharacter = function(annotation, container) {
      return container.append("<div>Hello Character " + (annotation.getLabel()) + "!</div>");
    };

    TVPlugin.prototype.renderDirector = function(annotation, container) {
      return container.append("<div>Hello Director " + (annotation.getLabel()) + "!</div>");
    };

    TVPlugin.prototype._loadFullDbpediaEntity = function(entity, callback) {
      var _this = this;
      return this.vie.load({
        entity: entity.getSubject()
      }).using('dbpedia').execute().success(function(fullEntity) {
        entity.set(fullEntity);
        return callback(fullEntity);
      });
    };

    TVPlugin.prototype._initWidget = function(annotation, widgetType, renderMethod, widgetOptions) {
      var widget,
        _this = this;
      widget = this.lime.allocateWidgetSpace(this, widgetOptions);
      widget.annotation = annotation;
      jQuery(widget).bind('activate', function(e) {
        return renderMethod(annotation, _this.getModalContainer());
      });
      annotation.widgets[widgetType] = widget;
      jQuery(annotation).bind("becomeActive", function(e) {
        return annotation.widgets[widgetType].setActive();
      });
      return jQuery(annotation).bind("becomeInactive", function(e) {
        return annotation.widgets[widgetType].setInactive();
      });
    };

    return TVPlugin;

  })(window.LimePlugin);

}).call(this);

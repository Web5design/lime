// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.YoutubePlugin = (function(_super) {

    __extends(YoutubePlugin, _super);

    function YoutubePlugin() {
      return YoutubePlugin.__super__.constructor.apply(this, arguments);
    }

    YoutubePlugin.prototype.init = function() {
      var annotation, _i, _len, _ref, _results;
      this.name = 'YoutubePlugin';
      annotation = void 0;
      console.info("Initialize YoutubePlugin");
      _ref = this.lime.annotations;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        annotation = _ref[_i];
        if (annotation.resource.value.indexOf("geonames") < 0 && annotation.resource.value.indexOf("dbpedia") < 0 && annotation.resource.value.indexOf("youtube") > 0) {
          _results.push(this.handleAnnotation(annotation));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    YoutubePlugin.prototype.handleAnnotation = function(annotation) {
      var nonConcept, widget,
        _this = this;
      nonConcept = annotation.resource.value;
      nonConcept = nonConcept.replace("No description found.", "");
      if (nonConcept.length >= 3) {
        widget = this.lime.allocateWidgetSpace(this, {
          thumbnail: "img/youtube.png",
          title: "Youtube Video",
          type: "YoutubeWidget",
          sortBy: function() {
            return 10000 * annotation.start + annotation.end;
          }
        });
        widget.annotation = annotation;
        jQuery(widget).bind('activate', function(e) {
          return _this.displayModal(annotation);
        });
        annotation.widgets[this.name] = widget;
        jQuery(annotation).bind("becomeActive", function(e) {
          return annotation.widgets[_this.name].setActive();
        });
        return jQuery(annotation).bind("becomeInactive", function(e) {
          return annotation.widgets[_this.name].setInactive();
        });
      }
    };

    YoutubePlugin.prototype.showInModalWindow = function(annotation, outputElement) {
      var lime, modalContent, result, url;
      lime = this.lime;
      url = annotation.resource.value;
      url = url.split('=')[1];
      console.log(url);
      result = "<iframe width=\"560\" height=\"315\" style=\"margin: 0 auto; display: block;\" src=\"http://www.youtube.com/embed/" + url + "\" frameborder=\"0\" allowfullscreen>\n     <p>Your browser does not support iframes.</p>\n </iframe>";
      modalContent = $("#modalContent");
      return $(modalContent).append(result);
    };

    YoutubePlugin.prototype.displayModal = function(annotation) {
      var mask, maskHeight, maskWidth, modalcontainer, winH, winW,
        _this = this;
      if (this.lime.player.isFullScreen) {
        modalcontainer = $(".modalwindow");
      } else {
        modalcontainer = $("#modalWindow");
      }
      mask = void 0;
      if (this.lime.player.isFullScreen) {
        mask = $(".mask");
      } else {
        mask = $("#mask");
      }
      $(modalcontainer).css("height", "90%");
      $(modalcontainer).css("max-height", "750px");
      $(modalcontainer).css("max-width", "700px");
      $(modalcontainer).css("overflow-x", "auto");
      $(modalcontainer).empty();
      $(modalcontainer).append("<a href=\"#\" class=\"close\" role=\"button\"><img src=\"img/close-icon.png\" style=\"width: 22px; height: 22px;\"/></a>");
      $(modalcontainer).append("<div id=\"modalContent\" style=\"height: 95%; width: 100%; position: relative; margin: 0 auto; color: black; \">");
      $(modalcontainer).append("</div>");
      maskHeight = $(window).height();
      maskWidth = $(window).width();
      $(mask).css({
        width: maskWidth,
        height: maskHeight
      });
      $(mask).fadeIn(100);
      $(mask).fadeTo("fast", 0.8);
      winH = $(window).height();
      winW = $(window).width();
      $(modalcontainer).css("top", winH / 2 - $(modalcontainer).height() / 2);
      $(modalcontainer).css("left", winW / 2 - $(modalcontainer).width() / 2);
      $(modalcontainer).fadeIn(100);
      $(".close").click(function(e) {
        e.preventDefault();
        $(mask).hide();
        return $(modalcontainer).hide().empty();
      });
      $(mask).click(function(e) {
        $(mask).hide();
        return $(modalcontainer).hide().empty();
      });
      $(window).resize(function(e) {
        maskHeight = $(document).height();
        maskWidth = $(document).width();
        $(mask).css({
          width: maskWidth,
          height: maskHeight
        });
        winH = $(window).height();
        winW = $(window).width();
        $(modalcontainer).css("top", winH / 2 - $(modalcontainer).height() / 2);
        return $(modalcontainer).css("left", winW / 2 - $(modalcontainer).width() / 2);
      });
      return this.showInModalWindow(annotation, "modalContent");
    };

    return YoutubePlugin;

  })(window.LimePlugin);

}).call(this);
